################################################
# Azure Subscription Basics
################################################
# Login to subscription
az login

# Retrieve default subscription id
$subscriptionId = (
    (
        az account list `
            --query "[?isDefault]" 
    ) | ConvertFrom-Json
).id

# Set Subscription
az account set --subscription $subscriptionId


################################################
# Define unifier
################################################
$random = Get-Random -Minimum 100 -Maximum 999

################################################
# Create Resource Group
################################################
$resourceGroup = "IoTHubDataEgress$random"
$location = "WestEurope"

az group create `
    --location $location `
    --resource-group $resourceGroup

################################################
# Create IoT Hub
################################################
$hubName = "IoTHubDataEgress$random"
$hubPartitionCount = "2"
$hubSku = "S1"
$hubDeviceId = "device01"
$hubConsumerGroupSDK = "dataegress_sdk"

az iot hub create `
    --name $hubName `
    --resource-group $resourceGroup `
    --location $location `
    --partition-count $hubPartitionCount `
    --sku $hubSKU

az iot hub device-identity create `
    --device-id $hubDeviceId `
    --hub-name $hubName

$hubDeviceConnectionString = (az iot hub device-identity connection-string show `
    --device-id $hubDeviceId `
    --hub-name $hubName `
    --query connectionString `
    --output tsv)

################################################
# Create storage account (for IoT Hub Routing)
################################################
$storageAccountName = "iothubdataegress$random"
$storageContainerName = "telemetryroute"
$storageAccountSku = "Standard_LRS"

# Create Storage Account
az storage account create `
--resource-group $resourceGroup `
--name $storageAccountName `
--sku $storageAccountSku

# Create Storage Account Container
az storage container create `
--account-name $storageAccountName `
--name $storageContainerName

################################################
# Create IoT Hub Endpoint & IoT Hub Route
################################################
$hubStorageEndpointName = "StorageEndpoint"
$hubStorageEndpointEncoding = "json"
$hubStorageEndpointFileFormat = "{iothub}/{partition}_{YYYY}_{MM}_{DD}_{HH}_{mm}"
$hubStorageEndpointBatchFrequency = "60"
$hubStorageEndpointChunkSize = "10"

$storageConnectionString = ( `
    az storage account show-connection-string `
        --resource-group $resourceGroup `
        --name $storageAccountName `
        --query connectionString).Trim('"')
$hubRouteName = "DeviceTelemetry2Storage"
$hubRouteSource = "DeviceMessages"

# Create Hub Endpoint
az iot hub routing-endpoint create `
    --resource-group $resourceGroup `
    --hub-name $hubName `
    --endpoint-subscription-id $subscriptionId `
    --endpoint-resource-group $resourceGroup `
    --endpoint-name $hubStorageEndpointName `
    --endpoint-type azurestoragecontainer `
    --connection-string $storageConnectionString `
    --container $storageContainerName `
    --encoding $hubStorageEndpointEncoding `
    --file-name-format $hubStorageEndpointFileFormat `
    --batch-frequency $hubStorageEndpointBatchFrequency `
    --chunk-size $hubStorageEndpointChunkSize

# Create Hub Route 
az iot hub route create `
    --resource-group $resourceGroup `
    --hub-name $hubName `
    --endpoint-name $hubStorageEndpointName `
    --source $hubRouteSource `
    --route-name $hubRouteName

################################################
# Create IoT Hub Consumer Group for SDK access
################################################
$hubConsumerGroupEventProcessorClient = "egress-eventprocessorclient"
$storageContainerNameSdk = "egress-eventprocessorclient"

# Create Consumer Group
az iot hub consumer-group create `
    --hub-name $hubName `
    --name $hubConsumerGroupEventProcessorClient

# Create storage container
az storage container create `
    --account-name $storageAccountName `
    --name $storageContainerNameSdk 


################################################
# Send telemtry data 
################################################
$MessageCount = 21
$telemetryDataTemplate = '
{
    "DeviceId": "@@DeviceId@@", 
    "DeviceCategory": "MultiSensor", 
    "TelemetryId": "@@TelemetryId",
    "Pressure": 15.7, 
    "EnergyConsumption": 20.7, 
    "TelemetryTimeStamp": "@@TelemetryTimeStamp@@"
}'
$telemetryDataTemplate = $telemetryDataTemplate -replace "`n|`r"
$telemetryDataTemplate = $telemetryDataTemplate.Replace(" ", "")

## Set Message Properties
$telemetryProperty = "Error=No"

## Set Device Id
$telemetryDataTemplate = $telemetryDataTemplate.Replace("@@DeviceId@@", $hubDeviceId)
for($i=0; $i -lt $MessageCount;$i++)
{
    $telemetryData = $telemetryDataTemplate.Replace("@@TelemetryId", [guid]::NewGuid().Guid )
    $telemetryTimeStamp = Get-Date -Format o | ForEach-Object { $_ -replace ":", "." }
    $telemetryData = $telemetryData.Replace("@@TelemetryTimeStamp@@", $telemetryTimeStamp)

    az iot device send-d2c-message `
        --hub-name $hubName `
        --device-id $hubDeviceId `
        --props $telemetryProperty `
        --data $telemetryData 

    Write-Output "Telemetry: $telemetryData send"
}

################################################
# Check storage container for data (IoT Hub Routing)
################################################
# Please be patient and wait for the configured time in $hubStorageEndpointBatchFrequency
az storage blob list `
    --container $storageContainerName `
    --account-name $storageAccountName

################################################
# Create message enrichment
################################################
# List existing device twins
az iot hub device-twin list `
    --resource-group $resourceGroup `
    --hub-name $hubName 

# Update device twin
$hubDeviceDesiredProp = "{'Ownership': {'DepartmentId': 'dep01', 'CostCenter': 'cost01'}}"
az iot hub device-twin update `
    --resource-group $resourceGroup `
    --hub-name $hubName `
    --device-id $hubDeviceId `
    --desired $hubDeviceDesiredProp

# Create enrichment (DepartmentId)
$enrichmentKey = 'DepartmentId'
$enrichmentValue = '$twin.properties.desired.Ownership.DepartmentId'
az iot hub message-enrichment create `
    --name $hubName `
    --key $enrichmentKey `
    --value $enrichmentValue `
    --endpoints $hubStorageEndpointName

# Create enrichment (CostCenter)
$enrichmentKey = 'CostCenter'
$enrichmentValue = '$twin.properties.desired.Ownership.CostCenter'
az iot hub message-enrichment create `
    --name $hubName `
    --key $enrichmentKey `
    --value $enrichmentValue `
    --endpoints $hubStorageEndpointName

################################################
# Routing based on message value 
################################################
# Update Hub Route 
$hubRouteCondition = '$body.DeviceCategory =' + " 'MultiSensor'"
az iot hub route update `
    --resource-group $resourceGroup `
    --hub-name $hubName `
    --endpoint-name $hubStorageEndpointName `
    --source $hubRouteSource `
    --route-name $hubRouteName `
    --condition $hubRouteCondition

# Start DataIngest-DeviceSimulator
dotnet run --project ./src/DataIngest-DeviceSimulator/DataIngest-DeviceSimulator.csproj $hubDeviceConnectionString

# Monitor events
az iot hub monitor-events `
    --output table `
    -p all `
    --hub-name $hubName 


